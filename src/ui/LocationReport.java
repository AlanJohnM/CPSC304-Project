package ui;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import database.DataBaseHandler;
import exceptions.InputException;
import model.RentReport;
import model.ReturnReport;

import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author alansmacbook
 */
public class LocationReport extends javax.swing.JFrame {

    DataBaseHandler db;

    /**
     * Creates new form LocationReport
     */
    public LocationReport(DataBaseHandler db, String date, String location, String city, boolean ret) throws InputException {
        initComponents();
        this.db = db;

        if (ret) {
            ArrayList<ReturnReport> reports = this.db.handleReturnReport(date, location, city);
            ArrayList<ArrayList<String>> vtCounts = this.db.handleReturnReportCountVtype(date, location, city);
            String[] colNames = new String [] {
                    "RID", "Return Date", "Odometer", "Full Tank", "Revenue", "Location", "City", "Vehicle Type"};
            DefaultTableModel dtm = new DefaultTableModel(null, colNames);
            for (ReturnReport r: reports) {
                String[] data = {Integer.toString(r.getRid()), r.getrDate().toString(), Integer.toString(r.getOdometer()),
                        r.getFulltank(), Integer.toString(r.getValue()), r.getLocation(), r.getCity(), r.getVtname()};
                dtm.addRow(data);
            }
            DetailsTable.setModel(dtm);

            int totalCount = 0;
            int totalRevenue = 0;
            colNames = new String [] {"Count", "Revenue", "VehicleType"};
            dtm = new DefaultTableModel(null, colNames);
            for (ArrayList<String> arr: vtCounts) {
                List<String> list = arr;
                String data[] = list.toArray(new String[0]);
                dtm.addRow(data);
                totalCount += Integer.parseInt(arr.get(0));
                totalRevenue += Integer.parseInt(arr.get(1));
            }
            TypeCountTable.setModel(dtm);
            TotalTransactions.setText("Total Returns: "+ Integer.toString(totalCount));
            TotalRevenue.setText("Total Revenue: " + Integer.toString(totalRevenue));


        } else {
            ArrayList<RentReport> reports = this.db.handleRentReport(date, location, city);
            ArrayList<HashMap<String, Integer>> counts = this.db.handleRentReportCount(date, location, city);

            String[] colNames = new String [] {
                    "RID", "License Plate", "V. Type", "Drivers Licence", "From", "To", "Odometer", "Card #", "Card Name", "Expiration", "Location", "City", "Conf. Number"
            };
            DefaultTableModel dtm = new DefaultTableModel(null, colNames);
            for (RentReport r: reports) {
                String[] data = {Integer.toString(r.getRid()), r.getVlicense(), r.getVtname(), r.getDlicense(), r.getFromDate().toString(),
                        r.getToDate().toString(), Integer.toString(r.getOdometer()), Integer.toString(r.getCardNo()), r.getCardName(),
                        Integer.toString(r.getExpDate()), r.getLocation(), r.getCity(), Integer.toString(r.getConfNo())};
                dtm.addRow(data);
            }
            DetailsTable.setModel(dtm);

            int totalCount = 0;
            colNames = new String [] {"Vehicle Type", "Count"};
            dtm = new DefaultTableModel(null, colNames);
            for (String s: counts.get(0).keySet()) {
                String data[] = {s, Integer.toString(counts.get(0).get(s))};
                dtm.addRow(data);
                totalCount += counts.get(0).get(s);
            }
            TypeCountTable.setModel(dtm);
            TotalTransactions.setText("Total Rentals: "+ Integer.toString(totalCount));
            TotalRevenue.setText("");

        }

        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        ReportLabel = new javax.swing.JLabel();
        TotalTransactions = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TypeCountTable = new javax.swing.JTable();
        CloseReport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DetailsTable = new javax.swing.JTable();
        TotalRevenue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        ReportLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        ReportLabel.setText("Location Report");

        TotalTransactions.setText("Total <TYPE>: <NUMBER>");

        TypeCountTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null}
                },
                new String [] {
                        "Vehicle Type", "Count"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TypeCountTable);

        CloseReport.setText("Close");
        CloseReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseReportActionPerformed(evt);
            }
        });

        DetailsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null}
                },
                new String [] {
                        "RID", "License Plate", "V. Type", "Drivers Licence", "From", "To", "Odometer", "Card #", "Card Name", "Expiration", "Location", "City", "Conf. Number"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DetailsTable);

        TotalRevenue.setText("<TOTAL REVENUE>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(95, 95, 95)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(TotalTransactions)
                                                        .addComponent(TotalRevenue))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(CloseReport)
                                                .addGap(322, 322, 322))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(ReportLabel)
                                                .addGap(289, 289, 289))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ReportLabel)
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(CloseReport)
                                                .addGap(12, 12, 12))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(TotalTransactions)
                                                .addGap(27, 27, 27)
                                                .addComponent(TotalRevenue)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>

    private void CloseReportActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }


    // Variables declaration - do not modify
    private javax.swing.JButton CloseReport;
    private javax.swing.JTable DetailsTable;
    private javax.swing.JLabel ReportLabel;
    private javax.swing.JLabel TotalRevenue;
    private javax.swing.JLabel TotalTransactions;
    private javax.swing.JTable TypeCountTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration
}
